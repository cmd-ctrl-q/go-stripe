{{template "base" .}}

{{define "title"}}
All Sales 
{{end}}

{{define "content"}}
<h2 class="md-5">All Sales</h2>
<hr>

<table id="sales-table" class="table table-striped">
    <thead>
        <tr>
            <th>Transaction</th>
            <th>Customer</th>
            <th>Product</th>
            <th>Amount</th>
            <th>Status</th>
        </tr>
        <tbody>

        </tbody>
    </thead>
</table>

<nav>
    <ul id="paginator" class="pagination">

    </ul>
</nav>
{{end}}

{{define "js"}}
<script>

let currentPage = 1; // current page should be first page
let pageSize = 5; // display 3 per page 

function paginator(pages, currPage) {
    let p = document.getElementById("paginator"); 

    let html = `<li class="page-item"><a href="#!" class="page-link pager" data-page="${currPage - 1}">&lt;</a></li>`

    for (var i = 0; i <= pages; i++) {
        html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${i + 1}">${i + 1}</a></li>`
    }

    // next button 
    html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${currPage + 1}">&gt;</a></li>`

    // populate ul 
    p.innerHTML = html;

    let pageBtns = document.getElementsByClassName("pager");
    for (var j = 0; j <= pageBtns.length; j++) {
        // send user to next page on click 
        pageBtns[j].addEventListener("click", function(e) {
            let desiredPage = e.target.getAttribute("data-page");
            console.log("Clicked, and data-page is", desiredPage);
            if ((desiredPage > 0) && (desiredPage <= pages)) {
                console.log("would go to page", desiredPage);
            }
        })
    }
}

function updateTable(ps, cp) {
    let token = localStorage.getItem("token"); 
    let tbody = document.getElementById("sales-table").getElementsByTagName("tbody")[0];

    let body = {
        page_size: ps, 
        page: cp, 
    }

    const requestOptions = {
        method: 'post', 
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
        }, 
        body: JSON.stringify(body),
    }

    fetch("{{.API}}/api/admin/all-sales", requestOptions)
    // response becomes response.json() 
    .then(response => response.json())
    // call back
    .then(function (data) {
        console.log(data);

        // check if no sales 
        if (data.orders) {

            data.orders.forEach(function(i) {
                let newRow = tbody.insertRow();
                let newCell = newRow.insertCell();

                // populate first cell 
                newCell.innerHTML = `<a href="/admin/sales/${i.id}">Order ${i.id}</a>`
                
                // populate second cell
                newCell = newRow.insertCell();
                let item = document.createTextNode(i.customer.last_name + ", " + i.customer.first_name);
                newCell.appendChild(item);

                // populate third cell 
                newCell = newRow.insertCell();
                item = document.createTextNode(i.widget.name);
                newCell.appendChild(item);

                // populate fourth cell 
                let curr = formatCurrency(i.transaction.amount, i.transaction.currency);
                newCell = newRow.insertCell();
                item = document.createTextNode(curr);
                newCell.appendChild(item);

                newCell = newRow.insertCell();
                if (i.status_id !== 1) {
                    newCell.innerHTML = `<span class="badge bg-danger">Refunded</span>`
                } else {
                    newCell.innerHTML = `<span class="badge bg-success">Charged</span>`
                }
            })
            paginator(data.last_page, data.current_page);
        } else {
            let newRow = tbody.insertRow();
            let newCell = newRow.insertCell();
            newCell.setAttribute("colspan", "4");
            newCell.innerHTML = "No data available";
        }
    })
}

document.addEventListener("DOMContentLoaded", function() {

    updateTable(pageSize, currentPage);
})

function formatCurrency(amount, ticker) {
    let c = parseFloat(amount/100);
    return c.toLocaleString("en-US", {
        style: "currency", 
        currency: ticker.toUpperCase(),
    });
}

</script>
{{end}}