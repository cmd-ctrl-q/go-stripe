{{define "base"}}

<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">

  <title>
    {{block "title" .}}

    {{end}}
  </title>
</head>

<body>

  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">&nbsp;</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/">Home</a>
          </li>

          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown"
              aria-expanded="false">
              Products
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/widget/1">Buy one widget</a></li>
              <li><a class="dropdown-item" href="/plans/bronze">Subscription</a></li>
            </ul>
          </li>

          <li id="vt-link" class="nav-item d-none">
            <a class="nav-link" href="/virtual-terminal">Virtual Terminal</a>
          </li>

        </ul>

        <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
          <li id="login-link" class="nav-item d-none">
            <a href="/login" class="nav-link">Login</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container">
    <div class="row">
      <div class="col">
        {{block "content" .}} {{end}}
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj"
    crossorigin="anonymous"></script>

  <script>
    // get reference to login link and virtual terminal 
    let loginLink = document.getElementById("login-link");
    let vtLink = document.getElementById("vt-link");

    // listen when the dom content is loaded
    document.addEventListener("DOMContentLoaded", function() {
      if (localStorage.getItem("token") !== null) {
        // user is likely logged in 
        // show logout 
        loginLink.innerHTML = '<a href="/#!" class="nav-link" onclick="logout()">Logout</a>';
        vtLink.classList.remove("d-none");
      } else {
        loginLink.innerHTML = '<a href="/login" class="nav-link">Login</a>';
      }

      // remove the class that's hiding the element
      loginLink.classList.remove("d-none");
    })

    function logout() {
      // remove items from local storage 
      localStorage.removeItem("token");
      localStorage.removeItem("token_expiry");
      // redirect to login endpoint
      location.href = "/login";
    }

    // checks if user is authenticated by doing a backend fetch request
    function checkAuth() {
      // if token doesnt exist in local storage
      if (localStorage.getItem("token") === null) {
        // redirect user to home page 
        location.href = "/login";
      } else {
        // get token from storage 
        let token = localStorage.getItem("token"); 
        const myHeaders = new Headers(); 
        myHeaders.append("Content-Type", "application/json");
        myHeaders.append("Authorization", "Bearer " + token);

        const requestOptions = {
          method: "POST", 
          headers: myHeaders, 
        }

        fetch("{{.API}}/api/is-authenticated", requestOptions)
        .then((response => response.json()))
        .then(function(data) {
          if (data.error === true) {
            console.log("Not logged in"); 
            location.href = "/login";
          } else {
            console.log("Logged in!");
          }
        })
      }
    }
  </script>
  {{block "js" .}}

  {{end}}

</body>

</html>
{{end}}